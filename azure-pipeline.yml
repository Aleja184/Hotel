# CI/CD pipeline
trigger:
  branches:
    include:
      - feature

resources:
- repo: self

# Select library for environment

variables:
  - ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
      - name: environment
        value: develop
  - ${{ if eq(variables['Build.SourceBranchName'], 'feature') }}:
      - name: environment
        value: feature
  - ${{ if eq(variables['Build.SourceBranchName'], 'qa') }}:
      - name: environment
        value: qa
  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      - name: environment
        value: prod
  - group: ${{ variables['Build.Repository.Name'] }}-${{ variables.environment }}
  
# Start stages
stages:


# Build Stage 
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
 
    steps:
    - task: replacetokens@6
      inputs:
        root: '$(Build.SourcesDirectory)'
        sources: 'variables.json'
        escape: 'json'
       

    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'package'
 
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory variables.json'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: 'variables.json'
        TargetFolder: $(Build.ArtifactStagingDirectory)

 
    - publish: $(Build.ArtifactStagingDirectory)
      artifact: drop
        
    


  - job: Upload
    displayName: Upload
    dependsOn: Build
    condition: succeeded()
    steps:
     - download: current
       artifact: drop
     - task: S3Upload@1
       inputs:
         awsCredentials: 'AWS-Azure'
         regionName: 'us-east-2'
         bucketName: 'hotel-a'
         sourceFolder: $(Pipeline.Workspace)/drop
         globExpressions: '**/target/*.?(war|jar)'

     - task: AWSCLI@1
       inputs:
         awsCredentials: 'AWS-Azure'
         regionName: 'us-east-2'
         awsCommand: 'ssm'
         awsSubCommand: 'send-command'
         awsArguments: '--document-name "AWS-RunShellScript" --parameters "{\"commands\":[\"aws s3 cp s3://hotel-a/target/Hotel-0.0.1-SNAPSHOT-jar-with-dependencies.jar /opt/hotel\"]}" --targets "Key=instanceids,Values=i-06c0ade1ba70202e6"'

     - task: S3Upload@1
       inputs:
         awsCredentials: 'AWS-Azure'
         regionName: 'us-east-2'
         bucketName: 'hotel-a'
         sourceFolder: $(Pipeline.Workspace)/drop
         globExpressions: 'variables.json'

     - task: AWSCLI@1
       inputs:
         awsCredentials: 'AWS-Azure'
         regionName: 'us-east-2'
         awsCommand: 'ssm'
         awsSubCommand: 'send-command'
         awsArguments: '--document-name "AWS-RunShellScript" --parameters "{\"commands\":[\"aws s3 cp s3://hotel-a/variables.json /opt/hotel\"]}" --targets "Key=instanceids,Values=i-06c0ade1ba70202e6"'     